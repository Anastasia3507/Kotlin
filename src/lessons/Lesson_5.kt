package lessons

import kotlin.random.Random

fun main() {
    /* Задание 1
    Создайте словарь, который содержит результаты игр спортивной команды. Ключом словаря должно быть название команды
    соперника, а в качестве значения должен быть массив с результатами игр с этим соперником. Необходимо вывести на
    консоль результаты игр. Выглядеть это должно примерно следующим образом:

    - Игра с Салават Юлаев - 3:6
    - Игра с Салават Юлаев - 5:5
    - Игра с Салават Юлаев - N/A
    - Игра с Авангард - 2:1
    - Игра с АкБарс - 3:3
    - Игра с АкБарс - 1:2
    */

    val result = mapOf(
        "Салават Юлаев" to arrayOf("3:6", "5:5", "N/A"),
        "Авангард" to arrayOf("2:1"),
        "АкБарс" to arrayOf("3:3", "1:2")
        )

    result.forEach { match ->
        match.value.forEach{ score ->
            println("- Игра с ${match.key} - $score")
        }
    }

    /* Задание 2
    Создайте функцию, которая считает общую сумму переданных в нее целочисленных значений и возвращает итоговый
    результат. Числа можно передавать либо в массиве, либо по отдельности, на ваше усмотрение. Вызовите функцию.
    */

    val numbersInt = List(10) { Random.nextInt(1, 10) }
    println(getSumNumbers(numbersInt))

    /* Задание 3
    3.1 Создайте функцию, которая определяет является ли число четным. В случае, если число является четным, функция
    должна возвращать true. Иначе - false.
    3.2 Создайте функцию, которая определяет делится ли число на *3* без остатка. Функция так же должна возвращать
    булево значение.
    3.3 Создайте функцию, которая возвращает возрастающий массив чисел в интервале от *x* до *y*. Данный интервал
    должен задаваться при вызове функции при помощи параметров. Вы должны самостоятельно реализовать логику создания
    массива. Если хотите усложнить задание, то можете возвращать не сортированный массив чисел в заданном интервале.
    Главное, что бы числа были уникальными и не повторялись. При этом количество элементов массива должно
    соответствовать количеству элементов заданного интервала.
    3.4 Создайте массив чисел от *1* до *100*, используя для этого выше созданную функцию
     */

    val numbers = getArrayOfNumbers(1, 100)

    /*
    3.5 Создайте функцию для фильтрации переданного в неё массива. Функция должна возвращать новый массив без четных
    чисел. Для определения фильтруемых значений используйте ранее созданную функцию из задания 3.1.
    3.6 Создайте функцию для фильтрации переданного в неё массива. Функция должна возвращать новый массив без чисел
    кратных трем. Для определения фильтруемых значений используйте ранее созданную функцию из задания 3.2.
    3.7 Отфильтруйте массив из задания 3.4 при помощи двух последний функций.
    */

    println(filteringOfNumbersDivisibleByTwo(numbers))
    println(filteringOfNumbersDivisibleByTree(numbers))
}

fun getSumNumbers (numbers: List<Int>) = numbers.sum()  // 2 функция считает сумму переданных в нее значений

fun parityOfNumber (number: Int): Boolean {   // 3.1 функция определяет является ли число четным
    return number % 2 == 0
}

fun multipleOfNumberByThree (number: Int): Boolean {   // 3.2 функция определяет делиться ли число на 3
    return number % 3 == 0
}

fun getArrayOfNumbers (x: Int, y: Int): List<Int> {   // 3.3 функция возвращает массив чисел в заданном диапазоне
    return List(y - x + 1) { i -> i + 1 }
}

fun filteringOfNumbersDivisibleByTwo (numbers: List<Int>) = numbers.filter { num -> parityOfNumber(num) }

fun filteringOfNumbersDivisibleByTree (numbers: List<Int>)= numbers.filter { num -> multipleOfNumberByThree(num) }